version: '3.8'

services:
  postgres:
    image: pgvector/pgvector:pg16
    container_name: mechanic-ai-postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - internal

  nextjs:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mechanic-ai-nextjs
    restart: always
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - NODE_ENV=production
    networks:
      - internal

  nginx:
    image: nginx:latest
    container_name: mechanic-ai-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    depends_on:
      - nextjs
    networks:
      - internal

 certbot:
    image: certbot/certbot
    container_name: mechanic-ai-certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - nginx
    entrypoint: "/bin/sh -c 'sleep 10 && certbot certonly --webroot --webroot-path=/var/lib/letsencrypt --email your@email.com --agree-tos --no-eff-email -d yourdomain.com'"

volumes:
  postgres_data:
  certbot-etc:
  certbot-var:

networks:
  internal:
    driver: bridge

